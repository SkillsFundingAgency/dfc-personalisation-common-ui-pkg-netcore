@model DFC.Personalisation.CommonUI.ViewComponents.Components.AutoComplete.AutoCompleteModel

    <script>

        function @Model.FunctionName () {

            accessibleAutocomplete({
                element: document.querySelector('#@Model.Element'),
                id: '@Model.Id', // To match it to the existing <label>.
                source: @Html.Raw(Model.Source),
                autoselect: @Model.AutoSelect.ToString().ToLower(),
                confirmOnBlur: @Model.ConfirmOnBlur.ToString().ToLower(),
                cssNamespace: '@Model.CssNameSpace',
                defaultValue: '@Model.DefaultValue',
                displayMenu: '@Model.DisplayMenu.ToLower()',
                minLength: @Model.MinLength,
                name: '@Model.Name',
                onConfirm: @Html.Raw(Model.OnConfirm),
                require: @Model.Required.ToString().ToLower(),
                showAllValues: @Model.ShowAllValues.ToString().ToLower(),
                showNoOptionsFound: @Model.ShowNoOptionsFound.ToString().ToLower()
            }
            );
        }
    </script>